trigger:
  - main

variables:
  dockerImageName: 'cppapp:$(Build.BuildId)'
  containerRegistry: 'cppacr.azurecr.io'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: BuildAndTest
  jobs:
  - job: Build
    steps:
    - script: |
        sudo apt update
        sudo apt install -y cmake g++ build-essential
        mkdir build && cd build
        cmake ..
        make
        ctest
      displayName: 'Build and Test'

- stage: SonarQubeAnalysis
  jobs:
  - job: SonarQube
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQubeServiceConnection'
        scannerMode: 'CLI'
        configMode: 'file'

    - script: |
        build-wrapper-linux-x86-64 --out-dir bw-output make clean all
        sonar-scanner
      displayName: 'Run SonarQube Scan'

    - task: SonarQubeAnalyze@5

- stage: DockerPush
  jobs:
  - job: Docker
    steps:
    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        containerRegistry: 'ACRServiceConnection'
        repository: 'cppapp'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)

- stage: Deploy
  jobs:
  - job: DeployK8s
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'AKSServiceConnection'
        azureResourceGroup: 'your-resource-group'
        kubernetesCluster: 'cppcluster'
        namespace: 'default'
        command: apply
        useConfigurationFile: true
        configuration: 'k8s-deployment.yml'
